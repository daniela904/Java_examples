La Fábrica Nacional de Chocolates después de lanzar nuevamente su álbum Jet, ha decidido suministrarles a las familias colombianas una aplicación para gestionar las láminas y de esa manera facilitar la completitud del álbum. Usted ha sido contratado para implementar funciones específicas que serán utilizadas en la aplicación y las cuales debe entregar en lenguaje Java cumpliendo con los prototipos o firmas de métodos establecidos por el equipo de desarrollo.



Cada lámina es identificada con un número y clasificada por categorías (astronomía, geología, etc.) que por simplicidad se representarán con valores enteros 1, 2, 3, 4, 5, 6 o 7. Como regla se ha establecido que las láminas de un tipo solo son cambiadas por las láminas del mismo tipo. Para la evaluación de la funcionalidad, la compañía compartió la siguiente tabla de especificaciones para determinar el puntaje entre 0 y 5 de su solución:

Puntaje

Cumplimiento

1

·         Los métodos solicitados se encuentran definidos en la clase Laminas implementada en el lenguaje Java.

1

Implementación de método identificarCategorias

 

Dada una lista de las categorías de las láminas (en la posición i-ésima de la lista está el tipo de dicha lámina), genera una lista con las categorías de láminas sin repetición. Por ejemplo:

 

Si se recibe como entrada: [1, 2, 2, 2, 3, 3, 1, 5, 4, 7, 2, 2, 2, 4]

La función debe retornar: [1, 2, 3, 4, 5, 7]

1

Implementación de método identificarCategoriaLaminasFaltantes

 

Dada una lista con los números de láminas que les faltan a la familia, la lista de las categorías de cada lámina y una categoría de láminas (en ese orden), les retorne una lista con los números de dicha categoría que le falta a la familia. Por ejemplo:

 

Ejemplo 1:

IdentificarCategoriaLaminasFaltantes([1, 4, 6, 9], [1, 1, 4, 2, 6, 4, 1, 4, 5, 6, 7, 5],  6)

Debe retornar la lista: [4, 9]

Nota: Las posiciones de la lista de categorías inicia en cero y va hasta 11 en este ejemplo.

 

Ejemplo 2:

IdentificarCategoriaLaminasFaltantes([2, 4, 5], [3, 1, 4, 6, 5, 3, 4, 2, 1],  3)

Debe retornar la lista: [5]

Nota: Las posiciones de la lista de categorías inicia en cero y va hasta 8 en este ejemplo.

 

1

Implementación de método identificarLaminasRelevantes

 

Dada una lista de láminas que tiene otra familia y la lista que tiene la familia que usa el programa, le retorne la lista con las láminas que le interesan.

 

Ejemplo:

identificarLaminasRelevantes([1, 5, 8, 9, 10, 12], [1, 3, 4, 6, 9, 10, 11])

Debe retornar la lista: [5, 8 11]

 

1

Implementación de método identificarNumeroLaminasParaCambiar

 

Dada una lista de láminas que tiene otra familia y la lista de láminas que tiene la familia que usa el programa, retorne el número de láminas que puede cambiar.

 

Ejemplo 1:

identificarLaminasParaCambiar ([1, 5, 8, 9, 10, 12], [1, 3, 4, 6, 9, 10, 11])

Debe retornar el valor: 3

 

Ejemplo 2:

identificarLaminasParaCambiar ([3,5,7,10,15,16], [4,10,5,8])

Debe retornar el valor: 2

 

Nota: Para que sea evaluada correctamente, el método debe retornar un Integer.

 

Entrada:

Este programa no requiere entrada. Ni generará salida. Se requiere que el estudiante genere un archivo con el nombre Laminas.java sin main y que se respeten los nombres de las funciones dadas y sus parámetros.

